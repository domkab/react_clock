{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockName","props","name","currentTime","Date","toUTCString","slice","isVisible","timerID","nameTimerID","getRandomName","value","now","toString","handleRightClick","event","preventDefault","setState","handleLeftClick","this","setInterval","updateTime","updateName","document","addEventListener","_prevProps","prevState","console","debug","clearInterval","removeEventListener","newTime","info","className","React","Component","App","ReactDOM","render","getElementById"],"mappings":"sNAaaA,EAAb,4MACEC,MAAoB,CAClBC,UAAW,EAAKC,MAAMC,KACtBC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAClDC,WAAW,GAJf,EAOEC,QAAiC,KAPnC,EASEC,YAAqC,KATvC,EA2CEC,cAAgB,WACd,IAAMC,EAAQP,KAAKQ,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBK,IA9CpB,EAiDEG,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKC,SAAS,CAAEV,WAAW,KApD/B,EAuDEW,gBAAkB,SAACH,GACjBA,EAAMC,iBAEN,EAAKC,SAAS,CAAEV,WAAW,KA1D/B,uDAWE,WAAqB,IAAD,OAClBY,KAAKX,QAAUY,aACb,kBAAM,EAAKC,eAAc,KAG3BF,KAAKV,YAAcW,aACjB,kBAAM,EAAKE,eAAc,MAG3BC,SAASC,iBAAiB,cAAeL,KAAKL,kBAC9CS,SAASC,iBAAiB,QAASL,KAAKD,mBArB5C,gCAwBE,SAAmBO,EAAgBC,GAC7BA,EAAU1B,YAAcmB,KAAKpB,MAAMC,WACrC2B,QAAQC,MAAR,uBAA8BF,EAAU1B,UAAxC,eAAwDmB,KAAKpB,MAAMC,cA1BzE,kCA8BE,WACMmB,KAAKX,SACPqB,cAAcV,KAAKX,SAGjBW,KAAKV,aACPoB,cAAcV,KAAKV,aAGrBc,SAASO,oBAAoB,cAAeX,KAAKL,kBACjDS,SAASO,oBAAoB,QAASX,KAAKD,mBAxC/C,wBA6DE,WAAc,IAAD,OACLa,GAAU,IAAI3B,MAAOC,cAAcC,OAAO,IAAK,GAErDa,KAAKF,SACH,CACEd,YAAa4B,IAEf,WACM,EAAKhC,MAAMQ,WACboB,QAAQK,KAAK,EAAKjC,MAAMI,kBAtElC,wBA4EE,WACEgB,KAAKF,SAAS,CACZjB,UAAWmB,KAAKT,oBA9EtB,oBAkFE,WACE,MAA8CS,KAAKpB,MAA3CQ,EAAR,EAAQA,UAAWP,EAAnB,EAAmBA,UAAWG,EAA9B,EAA8BA,YAE9B,OACE,sBAAK8B,UAAU,MAAf,UACE,6CACC1B,GACC,sBAAK0B,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGjC,IAGF,YAED,sBAAMiC,UAAU,cAAhB,SACG9B,cAjGf,GAA2B+B,IAAMC,WCLpBC,EAAb,4MACErC,MAAkB,CAChBC,UAAW,WAFf,4CAKE,WACE,OACE,qBAAKiC,UAAU,MAAf,SACE,cAAC,EAAD,CAAO/B,KAAMiB,KAAKpB,MAAMC,kBARhC,GAAyBkC,IAAMC,WCL/BE,IAASC,OACP,cAAC,EAAD,IACAf,SAASgB,eAAe,W","file":"static/js/main.8ed70115.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ninterface ClockState {\n  currentTime: string,\n  clockName: string,\n  isVisible: boolean,\n}\n\ninterface ClockProps {\n  name: string;\n}\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  state: ClockState = {\n    clockName: this.props.name,\n    currentTime: new Date().toUTCString().slice(-12, -4),\n    isVisible: true,\n  };\n\n  timerID: NodeJS.Timeout | null = null;\n\n  nameTimerID: NodeJS.Timeout | null = null;\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.updateTime(), 1000,\n    );\n\n    this.nameTimerID = setInterval(\n      () => this.updateName(), 3300,\n    );\n\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: ClockState) {\n    if (prevState.clockName !== this.state.clockName) {\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerID) {\n      clearInterval(this.timerID);\n    }\n\n    if (this.nameTimerID) {\n      clearInterval(this.nameTimerID);\n    }\n\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock ${value}`;\n  };\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ isVisible: false });\n  };\n\n  handleLeftClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ isVisible: true });\n  };\n\n  updateTime() {\n    const newTime = new Date().toUTCString().slice(-12, -4);\n\n    this.setState(\n      {\n        currentTime: newTime,\n      },\n      () => {\n        if (this.state.isVisible) {\n          console.info(this.state.currentTime);\n        }\n      },\n    );\n  }\n\n  updateName() {\n    this.setState({\n      clockName: this.getRandomName(),\n    });\n  }\n\n  render() {\n    const { isVisible, clockName, currentTime } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isVisible && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">\n              {clockName}\n            </strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">\n              {currentTime}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ninterface AppState {\n  clockName: string;\n}\n\nexport class App extends React.Component<[], AppState> {\n  state: AppState = {\n    clockName: 'Clock-0',\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Clock name={this.state.clockName} />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}